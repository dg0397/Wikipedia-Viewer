{"version":3,"sources":["services/getArticles.js","components/Article/Article.jsx","components/ArticleList/ArticleList.jsx","pages/SearchResults/index.js","hooks/useArticles.js","hooks/useNearScreen.js"],"names":["getArticles","setState","setStatus","keyword","page","limit","fetch","BASE","API_URL_ARTICLES","then","data","json","jsonResponse","pages","query","console","log","Object","values","articles","map","article","pageid","pageimage","title","original","thumbnail","extract","originalSource","source","thumbnailSource","prevState","concat","React","memo","className","to","ArticleList","key","SearchResults","params","useContext","Context","setArticles","setLoading","loading","keywordToUse","localStorage","getItem","useEffect","setItem","useState","setPages","loadingNextPage","setLoadingNextPage","useArticles","externalRef","useRef","isNearScreen","distance","setShow","fromRef","observer","element","current","onChange","entries","isIntersecting","Promise","resolve","IntersectionObserver","rootMargin","observe","disconnect","useNearScreen","preState","SearchBar","decodeURI","ref"],"mappings":"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","file":"static/js/3.314d1f75.chunk.js","sourcesContent":["import {BASE,API_URL_ARTICLES} from 'services/settings';\r\n\r\nexport default function getArticles(setState,setStatus,{keyword, page = 0, limit = 10}){\r\n    setStatus(true)\r\n    fetch(`${BASE}${API_URL_ARTICLES}&gsrlimit=${limit}&gsroffset=${page*limit}&gsrsearch=${keyword}`)\r\n        .then(data => data.json())\r\n        .then(jsonResponse =>{\r\n            const {pages} = jsonResponse.query;\r\n            console.log(Object.values(pages))\r\n            const articles = Object.values(pages).map( article => {\r\n                const {pageid,pageimage,title,original,thumbnail,extract} = article;\r\n                const {source:originalSource} = original ? original : \"\";\r\n                const {source:thumbnailSource} = thumbnail ? thumbnail : \"\" ;\r\n                return {pageid,pageimage,title,originalSource,thumbnailSource,extract}\r\n            } );\r\n            console.log(\"Fetching\");\r\n            \r\n            if(page === 0 ){\r\n                setState(articles)\r\n              }else{\r\n                setState(prevState => prevState.concat(articles))\r\n              }\r\n\r\n            setStatus(false)\r\n        })\r\n}","import React from 'react';\r\nimport './Article.css';\r\nimport { Link } from 'wouter';\r\n\r\nfunction Article({title,extract,pageid}){\r\n    return(\r\n        <div className = \"Article\" >\r\n            <h1>{title}</h1>\r\n            <p>{extract}</p>\r\n            <Link to = {`/article/${pageid}`}>See the Article</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Article)","import React from 'react';\r\nimport Article from 'components/Article/Article'\r\nimport './ArticleList.css'\r\n\r\nexport default function ArticleList({articles}){\r\n    return(\r\n        <div className = \"ArticleList\" >\r\n            {\r\n                articles.map( ({title,extract,pageid}) => {\r\n                    return(\r\n                        <Article \r\n                        title = {title}\r\n                        extract = {extract}\r\n                        pageid = {pageid}\r\n                        key = {pageid} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useRef, useEffect } from 'react';\r\nimport useArticles from 'hooks/useArticles';\r\n\r\nimport ArticleList from 'components/ArticleList/ArticleList';\r\nimport SearchBar from 'components/SearchBar/SearchBar';\r\n\r\nimport SpinnerArticles from 'components/ContentLoader/ArticleLoader';\r\nimport useNearScreen from 'hooks/useNearScreen';\r\n\r\nexport default function SearchResults({params}){\r\n    const {keyword} = params;\r\n    //console.log(keyword)\r\n    const {articles,loading,loadingNextPage,setPages} = useArticles({keyword});\r\n    //console.log(articles)\r\n    const externalRef = useRef();\r\n    const {isNearScreen} = useNearScreen({externalRef : loading ? null : externalRef})\r\n\r\n     \r\n\r\n    useEffect(()=> {\r\n        console.log(isNearScreen);\r\n       if(isNearScreen) setPages(preState => preState +1);\r\n   },[isNearScreen,setPages]);\r\n\r\n    //console.log(loadingNextPage);\r\n    //\r\n    //console.log(page)\r\n    return(\r\n        <>\r\n            {\r\n                loading ? \r\n                <SpinnerArticles /> :\r\n                <>\r\n                    <SearchBar />\r\n                    <h2>Search Results for: {decodeURI(keyword)}...</h2>\r\n                    <ArticleList  articles={articles} />\r\n                    <div ref = {externalRef}></div>\r\n                    {loadingNextPage &&   <SpinnerArticles /> } \r\n                </>\r\n            }\r\n        </>\r\n        \r\n    )\r\n}","import {useEffect,useContext,useState} from 'react';\r\nimport getArticles from 'services/getArticles';\r\nimport Context from 'context/ContextArticles';\r\n\r\nconst INITIAL_PAGE = 0;\r\n\r\nexport default function useArticles({keyword}){\r\n    const {articles,setArticles,setLoading,loading} = useContext(Context);\r\n\r\n    const keywordToUse = keyword ? keyword : localStorage.getItem(\"keyword\");\r\n\r\n    useEffect(() => {\r\n        getArticles(setArticles,setLoading,{keyword : keywordToUse});\r\n        localStorage.setItem('keyword',keywordToUse);\r\n        \r\n    }, [keywordToUse,setArticles,setLoading]);\r\n\r\n    const [page,setPages] = useState(INITIAL_PAGE);\r\n    const [loadingNextPage,setLoadingNextPage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(page === INITIAL_PAGE) return;\r\n\r\n        getArticles(setArticles,setLoadingNextPage,{keyword : keywordToUse, page})\r\n    },[page,keywordToUse,setArticles])\r\n    \r\n    return {articles,loading,loadingNextPage,setPages}\r\n}","import {useState,useEffect,useRef} from 'react'\r\n\r\nexport default function useNearScreen ({distance = \"100px\", externalRef} = {} ){\r\n    const [isNearScreen,setShow] = useState(false);\r\n    const fromRef = useRef()\r\n\r\n    useEffect(() => {\r\n        let observer;\r\n        const element = externalRef ? externalRef.current : fromRef.current\r\n\r\n        const onChange = (entries,observer) => {\r\n            const el = entries[0];\r\n            if(el.isIntersecting){\r\n                setShow(true);\r\n            }else{\r\n                setShow(false)\r\n            }\r\n        }\r\n        Promise.resolve(\r\n            typeof IntersectionObserver !== 'undefined' ?\r\n            IntersectionObserver :\r\n            import('intersection-observer')\r\n        ).then(()=>{\r\n            observer = new IntersectionObserver(onChange,{\r\n                rootMargin : distance\r\n            })\r\n    \r\n            element && observer.observe(element)\r\n        })\r\n        \r\n\r\n        return () => observer && observer.disconnect()\r\n    })\r\n\r\n    return {isNearScreen,fromRef}\r\n}"],"sourceRoot":""}